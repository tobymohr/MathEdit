<Window x:Class="MathEdit.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MathEdit"
        xmlns:view="clr-namespace:MathEdit.Views"
        xmlns:vm="clr-namespace:MathEdit.ViewModels"
        xmlns:h="clr-namespace:MathEdit.Helpers"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        FocusManager.FocusedElement="{Binding ElementName=menuPanel}"
        Title="MainWindow" Height="950" Width="850" Background="AliceBlue">

    <Window.DataContext>
        <vm:MainWindowModel />
    </Window.DataContext>

    <Window.InputBindings>
        <MouseBinding Gesture="{h:MouseWheel Direction=Up}" Command="{Binding ScrollIn}" />
        <MouseBinding Gesture="{h:MouseWheel Direction=Down}" Command="{Binding ScrollOut}" />
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenCommand}" CommandParameter="{Binding ElementName=FirstBox}"></KeyBinding>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}" CommandParameter="{Binding ElementName=FirstBox, Path=Document}"></KeyBinding>
        <KeyBinding Key="W" Modifiers="Alt" Command="{Binding CreateFractionCommand}"></KeyBinding>
        <KeyBinding Key="S" Modifiers="Alt" Command="{Binding CreatePowCommand}"></KeyBinding>
        <KeyBinding Key="Z" Modifiers="Control" Command="{Binding UndoCommand}"></KeyBinding>
        <KeyBinding Key="Y" Modifiers="Control" Command="{Binding RedoCommand}"></KeyBinding>
        <KeyBinding Key="D" Modifiers="Alt" Command="{Binding CreateSqrtCommand}"></KeyBinding>
        <KeyBinding Key="Z" Modifiers="Control+Alt" Command="{Binding OpenHotkeysCommand}"></KeyBinding>
        <KeyBinding Key="S" Modifiers="Control+Alt" Command="{Binding SaveAsCommand}" CommandParameter="{Binding ElementName=FirstBox, Path=Document}"></KeyBinding>
    </Window.InputBindings>
    <DockPanel x:Name="menuPanel">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_New" InputGestureText="Ctrl+N" />
                <MenuItem Header="_Open" InputGestureText="Ctrl+O" Command="{Binding OpenCommand}"/>
                <MenuItem Header="_Save" InputGestureText="Ctrl+S" Command="{Binding SaveCommand}" CommandParameter="{Binding ElementName=FirstBox, Path=Document}"/>
                <MenuItem Header="_Save As" InputGestureText="Ctrl+Alt+S" Command="{Binding SaveAsCommand}" CommandParameter="{Binding ElementName=FirstBox, Path=Document}"/>
                <Separator />
                <MenuItem Header="_Exit" InputGestureText="Alt+F4" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Cut" Command="ApplicationCommands.Cut"  FocusManager.IsFocusScope="True"></MenuItem>
                <MenuItem Header="_Copy"  Command="ApplicationCommands.Copy"  FocusManager.IsFocusScope="True"></MenuItem>
                <MenuItem Header="_Paste" Command="ApplicationCommands.Paste"  FocusManager.IsFocusScope="True"></MenuItem>
                <MenuItem Header="_Redo" x:Name="Redo"  Command="{Binding RedoCommand}"></MenuItem>
                <MenuItem Header="_Undo" x:Name="Undo"  Command="{Binding UndoCommand}" ></MenuItem> 
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Settings" Command="{Binding OpenSettingsCommand}" />
                <MenuItem Header="_Hot Keys" Command="{Binding OpenHotkeysCommand}"/>
            </MenuItem>
            <ComboBox x:Name="fontSizeBox" IsEditable="True" IsTextSearchEnabled="False" Width="40" Text="{Binding FontSize}" SelectedIndex="{Binding FontSizeIndex}" IsDropDownOpen="{Binding FontDropOpen}">
                <ComboBoxItem Content="5"/>
                <ComboBoxItem Content="12"/>
                <ComboBoxItem Content="16"/>
                <ComboBoxItem Content="18"/>
                <ComboBoxItem Content="20"/>
                <ComboBoxItem Content="24"/>
                <ComboBoxItem Content="30"/>
                <ComboBoxItem Content="40"/>
                <ComboBoxItem Content="55"/>
                <ComboBoxItem Content="72"/>
                <ComboBox.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="White"/>
                    <Style TargetType="ComboBoxItem">
                        <Style.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="FontWeight" Value="ExtraBold"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Resources>
                <ComboBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding CloseFontSizeBox}"></KeyBinding>
                </ComboBox.InputBindings>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DropDownClosed">
                        <i:InvokeCommandAction Command="{Binding ChangeFontSize, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            <ToggleButton Width="20" IsChecked="{Binding IsBoldChecked, Mode=TwoWay}" FontStyle="Normal" Command="{Binding ToggleBold}">
                B
            </ToggleButton>
            <ToggleButton Width="20" IsChecked="{Binding IsItalicChecked, Mode=TwoWay}" FontStyle="Italic" Command="{Binding ToggleItalic}">
                I
            </ToggleButton>
            <Slider x:Name="Zoom" DockPanel.Dock="Bottom" Minimum="1" Maximum="10" Width="70" Value="{Binding ZoomValue, Mode=TwoWay}"/>
        </Menu>
        <Grid>
            <ScrollViewer VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible" >
                <Grid>
                    
                    <ItemsControl ItemsSource="{Binding formulas}"></ItemsControl>
                </Grid>
            </ScrollViewer>
            <view:HotkeyMenu DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext}"  x:Name="hotkeyMenu" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Visibility, Mode=TwoWay}" >
            </view:HotkeyMenu>
            <Grid.InputBindings>
                <MouseBinding Gesture="{h:MouseWheel Direction=Up}" Command="{Binding ScrollIn}" />
                <MouseBinding Gesture="{h:MouseWheel Direction=Down}" Command="{Binding ScrollOut}" />
            </Grid.InputBindings>
            
        </Grid>
    </DockPanel>
</Window>
